on: 
  push:
    branches:
      - STAGING
name: ðŸš€ Deploy staging website on push

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy Staging
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/static'
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list

    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: npm ci

    - name: ðŸ”¨ Build Project
      run: npm run build
    
    - name: ðŸ“‚ Sync files
      uses: wangyucode/sftp-upload-action@v1.4.5
      with:
          host: ${{ secrets.FTP_HOST }}
          port: ${{ secrets.FTP_PORT }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PRIVATE_KEY }}
          localDir: './build'
          remoteDir: '/staging'
          exclude: '**/env.php'
          forceUpload: false
          dryRun: false