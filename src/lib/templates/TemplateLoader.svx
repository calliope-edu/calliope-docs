<script>
    import Blog from '$lib/templates/__layout-blog.svelte';
    import Default from '$lib/templates/__layout-default.svx';
    import DocsContents from '$lib/templates/__layout-docs-contents.svelte';
    import Docs from '$lib/templates/__layout-docs.svelte';
    import PageHead from '$lib/components/PageHead.svelte';

    let availTemplatesArray = {
      blog: Blog,
      default: Default,
      docs_contents: DocsContents,
      docs: Docs,
    }

    export let meta;
    export let template = meta.template ?? 'default';
    export let depth = 0;
    let TemplateComponent;
    let templatesArray = template.split(',')
    let currentTemplate = templatesArray[depth];
    let nextDepth = depth + 1;

    function changeTemplate(tmpl) {
        templatesArray = tmpl.split(',')
        currentTemplate = templatesArray[depth];
    }
    
    $: template = meta.template ?? 'default';
    $: changeTemplate(template);

    $: if(currentTemplate != '' && (currentTemplate in availTemplatesArray)){
        TemplateComponent = availTemplatesArray[currentTemplate]
    }

</script>

<PageHead title={meta.title} description={meta.description} />

{#if depth < templatesArray.length}
    {#if TemplateComponent != undefined}
        <svelte:component this={TemplateComponent} {meta}>
                <svelte:self depth={nextDepth} {meta}>
                    <slot />
                </svelte:self>
        </svelte:component>
    {:else}
        <svelte:self depth={nextDepth} {meta}>
            <slot />
        </svelte:self>
    {/if}
{:else}
    {#if TemplateComponent != undefined}
        <svelte:component this={TemplateComponent} {meta}>
            <slot />
        </svelte:component>
    {:else}
        <slot />
    {/if}
{/if}
