---
title: Editoren
docTitle: Software
seotitle: "Calliope Mini Editoren"
description: "Erfahre mehr über die verschiedenen Programmiereditoren für den Calliope Mini, einschließlich MakeCode, Micropython und Open Roberta Lab. Vergleiche Funktionen und entdecke weitere verfügbare Editoren für den Calliope Mini."
tags: "Calliope Mini, Programmiereditoren, Calliope mini Blocks, Scratch, Blocks, MakeCode, Micropython, Open Roberta Lab, MindPlus, Swift Playground, TigerJython, microblocks, abbozza!, SEGGER Embedded Studio, Arduino IDE"
template: docs
published: true
---

<script>
	import VersionTag from "../../../../lib/components/VersionTag.svelte";
import EditorComparison from "./editors.svx";
</script>

Der Calliope mini kann sowohl mit blockbasierten, als auch textbasierten Editoren programmiert und zum Leben erweckt werden.


## MakeCode

MakeCode ist ein von Microsoft Research entwickelter Programmiereditor mit dem sowohl block-, als auch textbasiert Microcontroller programmiert werden können. Der Editor ist erweiterbar und skalierbar indem Pakete, die unter anderem von den Nutzer:innen erstellt werden, hinzugefügt werden können.

- Entwickler: Microsoft Research
- Anwendungstyp: Webapplikation 
- kein Account erforderlich
- keine Installation erforderlich
- offline nutzbar nach dem ersten Speichern im lokalen Cache
- eigene Erweiterungen hinzufügbar
- eventbasierte Programmierung
- Programme können per Link geteilt werden 

<Button text='zum Editor' link='https://makecode.calliope.cc/' />
<br><br>

Weitere Informationen findest du auf der Calliope **[Webseite](https://calliope.cc/programmieren/editoren/makecode)** 

### Eventbasierte Programmierung

Der Calliope mini kann mit Makecode zu einem reaktiven System programmiert werden, welches parallel auf Events von Außen reagiert. Ein Eventscheduler sorgt dafür, dass mehrere Subprogramme oder Aufgaben parallel abgearbeitet werden. 

Weitere Informationen zur Funktionsweise von Makecode, kann hier nachgelesen werden: 

[Der Calliope mini - ein reaktives System](https://makecode.calliope.cc/device/reactive)

----

## Micropython

MicroPython ist eine speziell für Mikrocontroller angepasste Version von Python. Der größte Unterschied besteht darin, dass MicroPython kein Betriebssystem benötigt; sobald es verwendet wird, fungiert es quasi als das System, das auf dem Calliope mini läuft.
Python ist eine ausgezeichnete erste textbasierte Programmiersprache. Die Anweisungen und Syntax basieren auf natürlicher Sprache, was den Code leicht lesbar, verständlich und modifizierbar macht.
Python ist nicht nur im Bildungsbereich weit verbreitet, sondern wird auch in der Industrie eingesetzt, insbesondere in den Bereichen Datenwissenschaft und maschinelles Lernen.

- Entwickler/Anbieter: Calliope und Lulububu (Optimierungen und Anpassung an den Calliope mini), Open Source Entwicklung von der Microbit Foundation mit vielen weiteren Personen aus der Community
- Anwendungstyp: Webapplikation
- Calliope mini Version: V3 (V1 und V2 werden aktuell nur eingeschränkt unterstützt)
- Account erforderlich: Nein
- Installation: Nein
- Offline nutzbar: Ja, einmal geladen, auch offline nutzbar.

 <Button text="zum Editor" link="https://python.calliope.cc"/>
 <Button text="Github Repository" link="https://github.com/calliope-edu/calliope-mini-python-editor"/>
 <br><br>

---- 

<Versions>
<div slot="mini2-3">

## Calliope mini Blocks (Scratch)

Der neue Calliope mini Blocks Editor basierend auf Scratch ermöglicht eine weitere intuitive Programmierung des Calliope mini.
Ab jetzt können Anwendungen auf dem Computer mit dem Calliope mini gesteuert werden und andersherum: eigene Bilder, eigene Geräusche und unendlich viele neue Möglichkeiten. Der Kreativität sind keine Grenzen gesetzt.

<Button text='zum Editor' link='https://blocks.calliope.cc/' />

- Entwickler/Anbieter: Calliope, Scratch Foundation, Konek.to
- Anwendungstyp: Webapplikation, iOS App
- Betriebssystem: Windows-, Mac-, Linux- oder Chromebook-Computer
- Account erforderlich:	Nein
- Installation:	Nein
- Offline nutzbar: Ja, einmal geladen, auch offline nutzbar.

----

</div>

</Versions>

## Open Roberta Lab

<!-- ![Pinout](./editors_logo_nepo.png)  -->

<!-- <Image src="./editors_logo_nepo.png" alt="" /> -->

Open Roberta ist ein vom Fraunhofer Institut entwickelter Editor, mit dem sich verschiedene Microcontroller und Roboter in der grafischen Programmiersprache NEPO® programmieren lassen. In dem [Wiki von Open Roberta](https://jira.iais.fraunhofer.de/wiki/display/ORInfo/Das+Open+Roberta+Lab) befinden sich allgemeine Informationen zur Bedienung des Editors sowie eine [Einführung in die Programmierung](https://jira.iais.fraunhofer.de/wiki/display/ORInfo/Programmieren+Calliope+mini) des Calliope mini.

- Entwickler: Fraunhofer IAIS
- Anwendungstyp: Webapplikation 
- Account optional für mehr Funktionen
- keine Installation erforderlich
- offline nutzbar mit  [lokaler Installation](https://www.open-roberta.org/lokale-installation/)
- prozedurale Programmierung
- Gruppenverwaltung, um Programme mit Klassen/Gruppen zu teilen und zu überprüfen

<Button text='zum Editor' link='https://lab.open-roberta.org/' />

Weitere Informationen findest du auf der Calliope **[Webseite](https://calliope.cc/programmieren/editoren/makecode)** 

----

## Funktionsvergleich

In allen unten aufgeführten Editoren können die internen Sensoren und Aktoren des Calliope mini, digitale und analoge Pins (PWM), DC-Motoren, sowie Servomotoren programmiert werden. Grundlegende Programmierbausteine wie Variablen, bedingte Anweisungen/Verzweigungen und Schleifen sind in allen Editoren verfügbar.

<EditorComparison />

## Weitere Editoren

### MindPlus

Der Mind+ Editor ist eine Version von Scratch, die eine direkte Verbindung und intuitive Programmierung des Calliope mini ermöglicht.
So können Anwendungen auf dem Computer mit dem Calliope mini gesteuert werden und andersherum.

<Button text='weitere Infos' link='https://calliope.cc/programmieren/editoren/mindplus' />

### Swift Playground

Der Calliope mini Swift Playground eignet sich zum Einstieg ins textbasierte Programmieren mit dem Mac oder dem iPad. Die Programmiersprache Swift wird in den ersten Kapiteln durch die Eingabe und Anpassung von Parametern leicht verständlich nahegebracht.

<Button text='weitere Infos' link='https://calliope.cc/playground' />

### TigerJython for Kids

TigerJython ist ein microPython Editor mit umfangreicher Anleitung für den einfachen Start in die textbasierte Programmierung. TigerJython ist, je nach Bedarf, als Webanwendung oder herunterladbare Anwendung verfügbar.

<Button text='Editor' link='https://www.tigerjython4kids.ch/index.php?inhalt_links=robotik/navigation.inc.php&inhalt_mitte=robotik/calliope/loslegen.inc.php' />

### microblocks

microblocks ist als erweitertes Scratch anzusehen. Ein Teil des ursprünglichen Scratch-Teams entwickelt diesen Editor, dessen Schwerpunkt die physische Interaktion in den Mittelpunkt stellt.

<Button text='Editor' link='https://microblocks.fun/run-pilot/microblocks.html' />

### abbozza! Calliope

abbozza! Calliope ist eine grafische Entwicklungsumgebung für den Calliope mini, die für die Verwendung in Schulen und für Maker aller Altersstufen entwickelt wird. abbozza! wird am Lehrstuhl Didaktik der Informatik der Uni Osnabrück entwickelt.

<Button text='Editor' link='https://abbozza.informatik.uni-osnabrueck.de/abbozza/web/' />

### SEGGER Embedded Studio

SEGGER Embedded Studio ist ein professionelles Tool und umfassendes Entwicklerpaket. Mit der Entwicklungsumgebung kann eigene Software für den Calliope mini in der Programmiersprache "C" geschrieben werden.

<Button text='Editor' link='https://www.segger.com/evaluate-our-software/nordic-semiconductor/calliope-mini/' />

### Arduino IDE 

Die Arduino IDE ist in hohen Klassenstufen und bei Studierenden beliebt. Für alle, die an der rein textbasierten Programmierumgebung Spaß haben, wird dort nun auch der Calliope mini unterstützt. Nach dem integrieren, können direkt Sketches auf den Calliope mini übertragen werden und Daten auf der seriellen Ausgabe angezeigt werden.

<Button text='weitere Infos' link='https://calliope.cc/programmieren/editoren/arduino' />

