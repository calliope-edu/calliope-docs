---
title: Pins
docTitle: Hardware
seotitle: "Calliope mini Pins: Hardware, Steckleiste, Funktionen"
description: "Der Calliope mini verfügt über diverse Pins, die programmiert und über die Daten ausgetauscht werden können. Erfahre mehr über die Pinbelegung, Funktionen und technischen Details. Bilder der Pinouts für verschiedene Versionen werden ebenfalls bereitgestellt."
tags: "Calliope mini Pins, Hardware, Steckleiste, Funktionen, Pinout, MakeCode"
template: docs
published: true
---

<script>
    import { selectedBoardVersion } from '$lib/scripts/store.js';

    let pins = [{"name":"VCC","function":"","analogin":"","interface":"","color":"red"},{"name":"GND","function":"","analogin":"","interface":"","color":"black"},{"name":"P0","function":"PAD0","analogin":"AnalogIn","interface":"Touch","color":"green"},{"name":"P1","function":"PAD1","analogin":"AnalogIn","interface":"Touch","color":"green"},{"name":"P2","function":"PAD2","analogin":"AnalogIn","interface":"Touch","color":"green"},{"name":"P3","function":"PAD3","analogin":"","interface":"Touch","color":"green"},{"name":"C4","function":"Display Spalte 1","analogin":"AnalogIn","interface":"","color":"green"},{"name":"C5","function":"Button A","analogin":"","interface":"","color":"green"},{"name":"C6","function":"Display Spalte 4","analogin":"","interface":"","color":"green"},{"name":"C7","function":"Display Spalte 2","analogin":"","interface":"","color":"green"},{"name":"C8","function":"","analogin":"","interface":"","color":"green"},{"name":"C9","function":"","analogin":"","interface":"","color":"green"},{"name":"C10","function":"Display Spalte 5","analogin":"AnalogIn","interface":"","color":"green"},{"name":"C11","function":"Button B","analogin":"","interface":"","color":"green"},{"name":"C12","function":"JacDac","analogin":"","interface":"JACDAC","color":"green"},{"name":"C13","function":"","analogin":"","interface":"SPI CLOCK","color":"green"},{"name":"C14","function":"","analogin":"","interface":"SPI MISO","color":"green"},{"name":"C15","function":"","analogin":"","interface":"SPI MOSI","color":"green"},{"name":"C16","function":"Grove A1 Pin 0","analogin":"AnalogIn","interface":"UART RX","color":"green"},{"name":"C17","function":"Grove A1 Pin 1","analogin":"","interface":"UART TX","color":"green"},{"name":"C18","function":"Display Spalte 3","analogin":"AnalogIn","interface":"","color":"green"},{"name":"C19","function":"Grove A0 Pin 0","analogin":"","interface":"I2C SCL","color":"green"},{"name":"GND","function":"","analogin":"","interface":"","color":"black"},{"name":"C20","function":"Grove A0 Pin 1","analogin":"","interface":"I2C SDA","color":"green"},{"name":"M1+","function":"Pluspol Motor 1","analogin":"","interface":"","color":"green"},{"name":"M0+","function":"Pluspol Motor 0","analogin":"","interface":"","color":"green"},{"name":"M1-","function":"Minuspol Motor 1","analogin":"","interface":"","color":"green"},{"name":"M0-","function":"Minuspol Motor 0","analogin":"","interface":"","color":"green"},{"name":"GND","function":"","analogin":"","interface":"","color":"black"},{"name":"VM","function":"","analogin":"","interface":"","color":"red"}];
    let activePin = null;

    let activeButton = 'function'; // Default to "function" view

    function toggleVisibility(pin) {
        if (activePin === pin) {
            activePin = null; // Toggle off if it's already active
        } else {
            activePin = pin;
        }
    }
</script>

{description}

## Übersicht 

<VersionNav />

<ul>

    <!-- <li>Pins für LED-Anzeige: <br>Um Display Pins für andere Sachen benutzen, muss die LED-Matrix über den Editor mit <a href="https://makecode.calliope.cc/reference/led/enable">LED-Anzeige aktivieren</a> ausgeschaltet werden.</li> -->

<Versions>
    <div slot="mini1-2">
        <li>Die Pinleiste verfügt über 20 programmierbare General Purpose Input/Output (GPIO) Pins.<br>Manche Pins sind durch andere Funktionen vorbelegt.</li>
        <li>6 Ringpads für Bananenstecker oder Krokodilklemmen, 4 davon programmierbare Touchpins</li>
        <li>P0, P1, P2, P3 sind unbelegte I/O Pins zur allgemeinen Verwendung</li>
        <li>C4 - C15 sind Displaypins und können verwendet werden, wenn das Display deaktiviert wird.</li>
        <li>C16, C17 werden für den rechten Grove Anschluss A1 mitverwendet</li>
        <li>C18, C19 werden für den linken Grove Anschluss A0 mitverwendet</li>
        <li>A+ und B+ sind Motorpins für den Anschluss von bis zu zwei Motoren</li>
    </div>
    <div slot="mini3"> 
        <li>Die Pinleiste verfügt über 21 programmierbare General Purpose Input/Output (GPIO) Pins.<br>Manche Pins sind durch andere Funktionen vorbelegt.</li>
        <li>6 Ringpads für Bananenstecker oder Krokodilklemmen, 4 davon programmierbare Touchpins</li>
        <li>P0, P1, P2, P3, C8, C9, C13, C14, C15 sind unbelegte I/O Pins zur allgemeinen Verwendung</li>
        <li>C4, C6, C7, C10, C18 sind Displaypins und können verwendet werden, wenn das Display deaktiviert wird.</li>
        <li>C12 wird für den JacDac-Anschluss verwendet.</li>
        <li>C13, C14, C15 können als SPI-Pins verwendet werden.</li>
        <li>C16, C17 werden für den rechten Grove Anschluss A1 mitverwendet</li>
        <li>C19, C20 werden für den linken Grove Anschluss A0 mitverwendet</li>
        <li>M0-, M1-, M0+, M1+ sind Motorpins für den Anschluss von zwei Motoren</li>
        <li>Logo Pin auf der Rückseite</li>
</div>
    </Versions>
</ul>

<Versions>
  <div slot="mini1">

    ![Pinout](./calliope_mini_1.3_pinout_fin.jpg)

  </div>
  <div slot="mini2">

    ![Pinout](./calliope_mini_pinout_de_21.svg)

  </div>
  <div slot="mini3">

    ![Pinout](./calliopev3_front.svg)

    
----

## Pinleiste

<Button color="calliope"
        type={(activeButton) != 'function' ? 'border' : 'default'}
        on:click={()=>{activeButton='function'}}
        text="Funktion"
/>
<Button color="calliope" 
        type={(activeButton) != 'interface' ? 'border' : 'default'} 
        on:click={()=>{activeButton='interface'}}
        text="Schnittstelle"
/>

    <nav class="pinout">
        <ul>
            {#each pins as pin, index}
                <li on:click={() => toggleVisibility(pin)}>
                    <div 
                    class="dot" 
                    style="
                        background-color: {pin.state === 'hidden' ? 'white' : pin.color === 'red' ? '#e6007d' : pin.color === 'green' ? '#3fc863' : pin.color === 'black' ? '#034855' : pin.color};
                        {pin.analogin === 'AnalogIn' ? 'outline: 5px solid var(--color-blau);' : ''}
                    ">
                    <span>{pin.name}</span>
                    <span>{pin.name}</span>
                </div>
                {#if (activeButton === 'function' && pin.function !== "") || (activeButton === 'interface' && pin.interface !== "")}
                <div class="tag {index % 2 === 0 ? 'down' : 'up'}">
                    {#if activeButton === 'function'}
                        {pin.function}    
                    {:else if activeButton === 'interface'}     
                        {pin.interface}
                    {/if}
                </div>
            {/if}            
                </li>
            {/each}
        </ul>
    </nav>

    <div class="button-container s-Gkb4jWJe_kum" >	
        <div class="analogin_dot"></div> 
    <span style="color: var(--color-blau);">Analog lesen</span>
    </div>

    
  </div>
</Versions>

<!-- Hier Grafik mit der Steckleiste einfügen: -->

<!-- {#if activePin !== ""}
    <h3>{activePin.name}</h3>
    {#if activePin.interface !== ""}
        <p>Der Pin {activePin.name} benutzt die Schnittstelle {activePin.interface}.</p>
    {/if}
{/if} -->

----

## Ausgangsspannung

<!-- 

Spannung:
- Vcc (normalerweise  3.3V)
- Sensoren und Aktoren, die mit 5V betrieben werden, funktionieren in den meisten Fällen nicht und sollten mit einer externen Spannungsquelle versorgt und einem Pegelwandler an den Calliope mini angeschlossen werden.

Stromstärke:
- Standard Drive: max 5mA, Pins: P0, P1, P3, C4, C6, C8, C9, C10, C11, C16, C17, C18,
- High Drive: max 15mA, Pins: P2, C7, C12, C15, C5, C13, C14, C19, C20

- für alle Pins sind es **100 mA insgesamt**

<Admonition type='warning'>
<No>
Schließe niemals mehre Verbraucher, mit 15mA wie z.B. 2 LEDs an einen I/O-Pin an.
</No>

<Yes>
Verwendete stattdessen verschiedene I/O Pins oder eine Transistorenschaltung. Beachte, dass ingesamt die <b>100 mA</b> nicht überschritten werden.
</Yes>
</Admonition> -->

Die Ausgangspannung der Pins ist so hoch wie die VCC-Spannung.
        

    <Admonition type='note'>
        
        Detailliertere Infos zur Stromversorgung des Calliope mini über die Pins findest du unter <a href="../stromversorgung">Stromversorgung</a>

        </Admonition>

----

## Touchpins

Auf den 6 Ecken des sternenförmigen Calliope minis befinden sich jeweils große Pins, die es ermöglichen Krokodilklemmen anzuschließen oder auf Berührung zu reagieren. Zwei der Pins, sind GND und 3,3V und 4 davon als I/O-Pin programmierbar.
Die 4 Pins können alle sowohl analoge als auch digitale Werte senden und empfangen.

### Touchmodus
Um einer der Touchpins auf 1 zu setzen, muss GND zusätzlich berührt, wenn dieser im **resistiven Touchmodus** betrieben wird. Falls dieser im **kapazitiven Touchmodus** betrieben werden soll, kann dies z.B. in der Programmierung in Makecode erfolgen. 
Weitere Information zum Betrieb in den verschiedenen Touchmodi findest du [hier](https://makecode.microbit.org/reference/pins/touch-set-mode).
<!-- hier später URL auf docs von makecode.calliope.cc ändern -->

<Admonition type='info'>

Es wird unter zwei Formen der Berührung unterschieden:

- **Kapazitiven Touch**: Bei der kapazitiven Berührung erkennt der Calliope mini eine Änderung der Kapazität eines Pins oder einer leitenden Oberfläche (wie dem Touch-Logo), wenn der Finger diese berührt oder ihm sehr nahe kommt.
- **Resistiven Touch**: Bei der resistiven Berührung wird ein Stromfluss von dem berührten Pin zum GND-Pin festgestellt. Der Körper braucht eine Verbindung zu GND (entweder durch Berührung oder durch Anschluss eines Kabels an der Kleidung), während der Eingangspin berührt wird, um einen Stromkreis den beiden Pins zu schließen.

</Admonition>

<Admonition type='note'>
<V>V1</V> und <V>V2</V> unterstützen keinen kapazitiven Touch.
</Admonition>

----

## Analoge und digitale Pins

<li>Alle Pins können analog und digital schreiben und digital lesen</li>
    <Versions>
        <div slot="mini1-2">
            <li>mehrere Pins können analog lesen: P1, P2, C4, C5, C6, C16, C17 (siehe Tabelle unten)</li>
        </div>
        <div slot="mini3">
            <li>mehrere Pins können analog lesen: P0, P1, P2, C4, C10, C16, C18 (siehe Tabelle unten)</li>
        </div>
    </Versions>


<Admonition type='info'>

In der Signalverarbeitung wird werden Daten verallgemeinert in zwei verschiedenen Formen übertragen: 

- **Digital**: Ein binäres, digitales Signal ist an oder aus, 1 oder 0. Es ist abgestuft, abzählbar und verlustbehaftet (diskrete Werte).
- **Analog**: Ein analoges Signal, dahingegen hat einen zeitlich kontinuierlichen, stufenlosen Verlauf. Es kann theoretisch unendlich viele Werte in einem Wertebereich annehmen.

</Admonition>

### Digital Analog-Umsetzer (DAU/DAC)
Der integrierte Digital-Analog-Umsetzer des Calliope mini sorgt dafür, dass die analogen Signale vom Prozessor - der nur digital Signale verarbeiten kann - umgewandelt werden. Die Daten werden in den Bereich **0 - 1023** geschrieben und können auch so in dem jeweiligen Editor oder auch seriell als analoge Werte ausgelesen werden.

### PWM

Um eine LED zu dimmen oder die Geschwindigkeit eines Motors zu varieren, müsste analog die Spannung verändert werden. Der Ausgang der Pins liegt allerdigns immer bei 3,3 V. Mit der Pulsweitenmodulation wird durch schnelles ein und auschalten in unterschiedlicher Periodendauer ein analoges Signal simuliert werden, welches unterschiedliche abgestufte Werte annehmen kann. <br>
    {#if $selectedBoardVersion == 3}
    Es können bis zu 4 PWM-Signale gleichzeitig generiert werden, bevor diese anfangen unflüssig und abgestuft zu werden.
{:else}
    Es können bis zu 3 PWM-Signale gleichzeitig generiert werden, bevor diese anfangen unflüssig und abgestuft zu werden.
{/if}


<Versions>

<div slot="mini3">

## Gesamtes Pinout


| Calliope mini V3<br>Pinout / Signal Name | Calliope mini V3<br>Pinleiste | MakeCode                |
| ------------------------------- | ---------------------- | ----------------------- |
| Speaker                         |                        |                         |
| SPI_EXT_MISO                    | C14                    | C14                     |
| PAD0                            | P0                     | P0                      |
| PAD1                            | P1                     | P1                      |
| PAD2                            | P2                     | P2                      |
| MIC_IN                          |                        | MIC                     |
| UART_INT_RX                     |                        |                         |
| RGB_DIN                         |                        | RGB-LED                 |
| I2C_INT_SCL                     |                        |                         |
| GPIO2                           | C9                     | C9                      |
| GPIO1                           | C8                     | C8                      |
| COL2                            | C7                     | C7                      |
| GPIO4                           | C12                    | C12                     |
| SPI_EXT_MOSI                    | C15                    | C15                     |
| BTN_A                           | C5                     | C5                      |
| ROW3                            |                        |                         |
| I2C_INT_SDA                     |                        |                         |
| SPI_EXT_SCK                     | C13                    | C13                     |
| NC                              |                        |                         |
| ROW5                            |                        |                         |
| RUN_MIC                         |                        |                         |
| ROW1                            |                        |                         |
| ROW2                            |                        |                         |
| BTN_B                           | C11                    | Knopf B                 |
| ROW4                            |                        |                         |
| I2C_INT_INT                     |                        |                         |
| I2C_EXT_SCL                     | C19                    | A0 SCL                  |
| MOTOR_AIN2                      |                        | Führt dann in Motor M0. |
| COL1                            | C4                     | C4                      |
| Grove1.A0                       | C16                    | A1 TX                   |
| COL5                            | C10                    |                         |
| COL3                            | C18                    |                         |
| I2C_EXT_SDA                     | C20                    | A0 SDA                  |
| MOTOR_AIN1                      |                        | Führt dann in Motor M0. |
| GPIO3                           | C17                    | A1 RX                   |
| PAD3                            | P3                     | P3                      |
| LOGO                            |                        | Touch-Logo              |
| COL4                            | C6                     | C6                      |
| MOTOR_MODE                      |                        |                         |
| MOTOR_BIN1                      |                        | Führt dann in Motor M1. |
| UART_INT_TX                     |                        |                         |
| MOTOR_BIN2                      |                        | Führt dann in Motor M1. |

</div>

</Versions>

<style>
    .pinout {
        background-color: black;
        width: 100%;
        height:120px;
        position: relative;
        margin-top: 9em;
        margin-bottom: 9em;
    }
    
    .pinout ul {
        display: flex;
        flex-wrap: wrap;
        flex-direction: column-reverse;
        height: 100%;
        padding-top: 10px;
        padding-bottom: 10px;
        list-style: none;
        padding-left:0px;
    }
    
    .pinout ul li .tag {
        position: absolute;
        /* font-size: 1pt; */
        text-wrap: nowrap;
        left: 75%;
        /* height: 28px; */
        /* background-color: red; */
        border: 2px solid;
        border-radius: 0px 30px 30px 0px;
        padding: 0px 6px 0px 6px;
        left: 40px;
    }
    
    
    .pinout ul li .tag.up {
        transform-origin: bottom left;
        margin-top: -32px;
        transform: rotateZ(-90deg);
    }
    .pinout ul li .tag.down {
        transform-origin: top left;
        margin-top: 58px;
        transform: rotateZ(90deg);
    }
    .pinout li {
        cursor: pointer;
      /* justify-self: start; */
        list-style: none;
        height: 50%;
        margin: 0px;
        position: relative;
    }
    
    .pinout li .dot {
    margin: auto;
    position: absolute;
      top: 50%;
      left: 50%;
      -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
    width: 35px;
    height: 35px;
    border-radius:40px;
    background-color: #3fc863;
    text-align: center;
        color: white;
        padding-top: 4px;
    }
    
    .pinout li .dot span {
        color: white;
        left: 50%;
        top: 50%;
        position: absolute;
        transform: translate(-50%, -50%);
        text-align: center;
    }
    
    .pinout li:hover 
    {
        .tag {
            background-color: #3fc863;
        }
    .dot {
        width: 40px;
    height: 40px;
    font-weight: bold;
    padding-top: 6px;
    }
    }
    .analogin_dot {
    width: 30px;
    display: inline-block;
    margin-bottom: -10px;
    height: 30px;
    padding-top: 30px;
    font-weight: bold;
    padding-top: 6px;
    border-radius: 30px;
    border: 5px solid var(--color-blau);
}
    
    @media (max-width: 767px) {
        .pinout li .dot span {
            display: none;
        }
        .pinout li .dot:hover span {
        display: block;
    }
        .pinout li .dot {
        width: 20px;
        height: 20px;
    }
    }
    
        </style>